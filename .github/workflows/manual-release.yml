name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      prerelease_id:
        description: "Prerelease identifier (only for prerelease)"
        required: false
        default: "beta"
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Build package
        run: npm run build

      - name: Run tests (if any)
        run: npm test --if-present

      - name: Bump version and create tag
        id: version_bump
        run: |
          if [ "${{ github.event.inputs.version_type }}" = "prerelease" ]; then
            NEW_VERSION=$(npm version prerelease --preid=${{ github.event.inputs.prerelease_id }} --no-git-tag-version)
          else
            NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          fi
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "âœ… Bumped version to $NEW_VERSION"

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }}"

      - name: Create and push tag
        run: |
          git tag ${{ steps.version_bump.outputs.new_version }}
          git push origin main
          git push origin ${{ steps.version_bump.outputs.new_version }}
          echo "âœ… Created and pushed tag ${{ steps.version_bump.outputs.new_version }}"

      - name: Wait for release workflow
        run: |
          echo "ðŸš€ Tag pushed! The release workflow will now:"
          echo "  1. Build and test the package"
          echo "  2. Publish to npm"
          echo "  3. Create GitHub release"
          echo ""
          echo "Check the Actions tab for the release workflow status."
